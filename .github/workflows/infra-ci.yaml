name: Infrastructure CI

on:
  push:
    branches: [main, develop]
    paths:
      - "infra/**"
      - ".github/workflows/infra-ci.yaml"
  pull_request:
    branches: [main]
    paths:
      - "infra/**"
      - ".github/workflows/infra-ci.yaml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform-checks:
    name: Terraform Validation and Format
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [ecr]
        environment: [dev, prd]
    defaults:
      run:
        working-directory: ./infra/${{ matrix.module }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.13.0"

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init with Backend
        run: |
          terraform init -backend-config="./tfbackend/${{ matrix.environment }}.tfbackend"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-1

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan (Dry Run)
        run: |
          terraform plan -var-file=./tfvars/${{ matrix.environment }}.tfvars -input=false -detailed-exitcode
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-1
        if: github.actor != 'dependabot[bot]'
        continue-on-error: true

  tflint:
    name: TFLint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.50.0

      - name: Cache TFLint plugins
        uses: actions/cache@v4
        with:
          path: ~/.tflint.d/plugins
          key: ${{ runner.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint --recursive

  tfsec:
    name: Security Scan with tfsec
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: ./infra
          soft_fail: true
          format: sarif
          out: tfsec-results.sarif

      - name: Upload tfsec results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: tfsec-results.sarif
        if: github.ref == 'refs/heads/main'

  checkov:
    name: Security Scan with Checkov
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./infra
          framework: terraform
          output_format: sarif
          output_file_path: checkov-results.sarif
          soft_fail: true
          skip_check: CKV_AWS_144,CKV_AWS_145 # Skip specific checks if needed

      - name: Upload Checkov results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: checkov-results.sarif
        if: github.ref == 'refs/heads/main'

  terraform-docs:
    name: Terraform Documentation Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}

      - name: Render terraform docs
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          working-dir: ./infra
          output-file: README.md
          output-method: inject
          git-push: false
