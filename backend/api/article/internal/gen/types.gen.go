// Package gen provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.16.3 DO NOT EDIT.
package gen

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for ArticleStatus.
const (
	ArticleStatusDraft     ArticleStatus = "draft"
	ArticleStatusPrivate   ArticleStatus = "private"
	ArticleStatusPublished ArticleStatus = "published"
)

// Defines values for ArticleCreateStatus.
const (
	ArticleCreateStatusDraft     ArticleCreateStatus = "draft"
	ArticleCreateStatusPrivate   ArticleCreateStatus = "private"
	ArticleCreateStatusPublished ArticleCreateStatus = "published"
)

// Defines values for ArticleUpdateStatus.
const (
	ArticleUpdateStatusDraft     ArticleUpdateStatus = "draft"
	ArticleUpdateStatusPrivate   ArticleUpdateStatus = "private"
	ArticleUpdateStatusPublished ArticleUpdateStatus = "published"
)

// Defines values for OrderParam.
const (
	OrderParamAsc  OrderParam = "asc"
	OrderParamDesc OrderParam = "desc"
)

// Defines values for SortParam.
const (
	SortParamCreatedAt   SortParam = "created_at"
	SortParamPublishedAt SortParam = "published_at"
	SortParamUpdatedAt   SortParam = "updated_at"
	SortParamViewCount   SortParam = "view_count"
)

// Defines values for StatusParam.
const (
	StatusParamDraft     StatusParam = "draft"
	StatusParamPrivate   StatusParam = "private"
	StatusParamPublished StatusParam = "published"
)

// Defines values for GetArticlesParamsSort.
const (
	GetArticlesParamsSortCreatedAt   GetArticlesParamsSort = "created_at"
	GetArticlesParamsSortPublishedAt GetArticlesParamsSort = "published_at"
	GetArticlesParamsSortUpdatedAt   GetArticlesParamsSort = "updated_at"
	GetArticlesParamsSortViewCount   GetArticlesParamsSort = "view_count"
)

// Defines values for GetArticlesParamsOrder.
const (
	GetArticlesParamsOrderAsc  GetArticlesParamsOrder = "asc"
	GetArticlesParamsOrderDesc GetArticlesParamsOrder = "desc"
)

// Defines values for GetArticlesParamsStatus.
const (
	GetArticlesParamsStatusDraft     GetArticlesParamsStatus = "draft"
	GetArticlesParamsStatusPrivate   GetArticlesParamsStatus = "private"
	GetArticlesParamsStatusPublished GetArticlesParamsStatus = "published"
)

// Defines values for GetArticlesByCategorySlugParamsSort.
const (
	GetArticlesByCategorySlugParamsSortCreatedAt   GetArticlesByCategorySlugParamsSort = "created_at"
	GetArticlesByCategorySlugParamsSortPublishedAt GetArticlesByCategorySlugParamsSort = "published_at"
	GetArticlesByCategorySlugParamsSortUpdatedAt   GetArticlesByCategorySlugParamsSort = "updated_at"
	GetArticlesByCategorySlugParamsSortViewCount   GetArticlesByCategorySlugParamsSort = "view_count"
)

// Defines values for GetArticlesByCategorySlugParamsOrder.
const (
	GetArticlesByCategorySlugParamsOrderAsc  GetArticlesByCategorySlugParamsOrder = "asc"
	GetArticlesByCategorySlugParamsOrderDesc GetArticlesByCategorySlugParamsOrder = "desc"
)

// Defines values for SearchArticlesParamsSort.
const (
	SearchArticlesParamsSortCreatedAt   SearchArticlesParamsSort = "created_at"
	SearchArticlesParamsSortPublishedAt SearchArticlesParamsSort = "published_at"
	SearchArticlesParamsSortUpdatedAt   SearchArticlesParamsSort = "updated_at"
	SearchArticlesParamsSortViewCount   SearchArticlesParamsSort = "view_count"
)

// Defines values for SearchArticlesParamsOrder.
const (
	SearchArticlesParamsOrderAsc  SearchArticlesParamsOrder = "asc"
	SearchArticlesParamsOrderDesc SearchArticlesParamsOrder = "desc"
)

// Defines values for SearchArticlesParamsStatus.
const (
	SearchArticlesParamsStatusDraft     SearchArticlesParamsStatus = "draft"
	SearchArticlesParamsStatusPrivate   SearchArticlesParamsStatus = "private"
	SearchArticlesParamsStatusPublished SearchArticlesParamsStatus = "published"
)

// Defines values for GetArticlesByTagSlugParamsSort.
const (
	CreatedAt   GetArticlesByTagSlugParamsSort = "created_at"
	PublishedAt GetArticlesByTagSlugParamsSort = "published_at"
	UpdatedAt   GetArticlesByTagSlugParamsSort = "updated_at"
	ViewCount   GetArticlesByTagSlugParamsSort = "view_count"
)

// Defines values for GetArticlesByTagSlugParamsOrder.
const (
	Asc  GetArticlesByTagSlugParamsOrder = "asc"
	Desc GetArticlesByTagSlugParamsOrder = "desc"
)

// AlreadyExists リソースが既に存在する場合のエラーレスポンス
type AlreadyExists struct {
	// Code エラーコード
	Code string `json:"code"`

	// Identifier 重複したリソースの識別子
	Identifier *string `json:"identifier,omitempty"`

	// Message エラーメッセージ
	Message string `json:"message"`

	// Resource 既に存在するリソースの種類
	Resource *string `json:"resource,omitempty"`
}

// Article ブログ記事のデータモデル
type Article struct {
	// Category 記事カテゴリのデータモデル
	Category *Category `json:"category,omitempty"`

	// CategoryId カテゴリID
	CategoryId *openapi_types.UUID `json:"category_id,omitempty"`

	// Content Markdown形式の記事本文
	Content string `json:"content"`

	// CreatedAt 作成日時
	CreatedAt time.Time `json:"created_at"`

	// Id 記事の一意識別子
	Id openapi_types.UUID `json:"id"`

	// PublishedAt 公開日時
	PublishedAt *time.Time `json:"published_at,omitempty"`

	// SeoMetadata SEOメタデータ
	SeoMetadata *struct {
		// Description メタディスクリプション
		Description *string `json:"description,omitempty"`

		// Keywords キーワード
		Keywords *[]string `json:"keywords,omitempty"`

		// OgImage OGP画像URL
		OgImage *string `json:"og_image,omitempty"`
	} `json:"seo_metadata,omitempty"`

	// Slug URL用の識別子
	Slug string `json:"slug"`

	// Status 記事の公開状態
	Status ArticleStatus `json:"status"`

	// Summary 記事の要約（SEO用）
	Summary *string `json:"summary,omitempty"`

	// Tags 記事に付与されたタグ
	Tags *[]Tag `json:"tags,omitempty"`

	// Title 記事のタイトル
	Title string `json:"title"`

	// UpdatedAt 更新日時
	UpdatedAt time.Time `json:"updated_at"`

	// ViewCount 閲覧数
	ViewCount *int `json:"view_count,omitempty"`
}

// ArticleStatus 記事の公開状態
type ArticleStatus string

// ArticleCreate 記事作成リクエスト
type ArticleCreate struct {
	// CategoryId カテゴリID
	CategoryId *openapi_types.UUID `json:"category_id,omitempty"`

	// Content Markdown形式の記事本文
	Content string `json:"content"`

	// PublishedAt 公開日時（予約投稿用）
	PublishedAt *time.Time `json:"published_at,omitempty"`

	// SeoMetadata SEOメタデータ
	SeoMetadata *struct {
		// Description メタディスクリプション
		Description *string `json:"description,omitempty"`

		// Keywords キーワード
		Keywords *[]string `json:"keywords,omitempty"`

		// OgImage OGP画像URL
		OgImage *string `json:"og_image,omitempty"`
	} `json:"seo_metadata,omitempty"`

	// Slug URL用の識別子
	Slug string `json:"slug"`

	// Status 記事の公開状態
	Status ArticleCreateStatus `json:"status"`

	// Summary 記事の要約（SEO用）
	Summary *string `json:"summary,omitempty"`

	// TagIds タグIDのリスト
	TagIds *[]openapi_types.UUID `json:"tag_ids,omitempty"`

	// Title 記事のタイトル
	Title string `json:"title"`
}

// ArticleCreateStatus 記事の公開状態
type ArticleCreateStatus string

// ArticleList 記事一覧レスポンス
type ArticleList struct {
	// Articles 記事のリスト
	Articles []Article `json:"articles"`

	// Pagination ページネーション情報
	Pagination struct {
		// CurrentPage 現在のページ番号
		CurrentPage int `json:"current_page"`

		// HasNext 次のページがあるかどうか
		HasNext *bool `json:"has_next,omitempty"`

		// HasPrev 前のページがあるかどうか
		HasPrev *bool `json:"has_prev,omitempty"`

		// PageSize 1ページあたりの件数
		PageSize int `json:"page_size"`

		// TotalCount 総件数
		TotalCount int `json:"total_count"`

		// TotalPages 総ページ数
		TotalPages int `json:"total_pages"`
	} `json:"pagination"`
}

// ArticleUpdate 記事更新リクエスト
type ArticleUpdate struct {
	// CategoryId カテゴリID
	CategoryId *openapi_types.UUID `json:"category_id,omitempty"`

	// Content Markdown形式の記事本文
	Content *string `json:"content,omitempty"`

	// PublishedAt 公開日時
	PublishedAt *time.Time `json:"published_at,omitempty"`

	// SeoMetadata SEOメタデータ
	SeoMetadata *struct {
		// Description メタディスクリプション
		Description *string `json:"description,omitempty"`

		// Keywords キーワード
		Keywords *[]string `json:"keywords,omitempty"`

		// OgImage OGP画像URL
		OgImage *string `json:"og_image,omitempty"`
	} `json:"seo_metadata,omitempty"`

	// Slug URL用の識別子
	Slug *string `json:"slug,omitempty"`

	// Status 記事の公開状態
	Status *ArticleUpdateStatus `json:"status,omitempty"`

	// Summary 記事の要約（SEO用）
	Summary *string `json:"summary,omitempty"`

	// TagIds タグIDのリスト
	TagIds *[]openapi_types.UUID `json:"tag_ids,omitempty"`

	// Title 記事のタイトル
	Title *string `json:"title,omitempty"`
}

// ArticleUpdateStatus 記事の公開状態
type ArticleUpdateStatus string

// BadRequest リクエストが不正な場合のエラーレスポンス
type BadRequest struct {
	// Code エラーコード
	Code string `json:"code"`

	// Details エラーの詳細情報
	Details *[]struct {
		// Field エラーが発生したフィールド名
		Field *string `json:"field,omitempty"`

		// Reason エラーの理由
		Reason *string `json:"reason,omitempty"`
	} `json:"details,omitempty"`

	// Message エラーメッセージ
	Message string `json:"message"`
}

// Category 記事カテゴリのデータモデル
type Category struct {
	// ArticleCount このカテゴリの記事数
	ArticleCount *int `json:"article_count,omitempty"`

	// CreatedAt 作成日時
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// Description カテゴリの説明
	Description *string `json:"description,omitempty"`

	// DisplayOrder 表示順
	DisplayOrder *int `json:"display_order,omitempty"`

	// Id カテゴリの一意識別子
	Id openapi_types.UUID `json:"id"`

	// Name カテゴリ名
	Name string `json:"name"`

	// Slug URL用の識別子
	Slug string `json:"slug"`

	// UpdatedAt 更新日時
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

// CategoryCreate カテゴリ作成リクエスト
type CategoryCreate struct {
	// Description カテゴリの説明
	Description *string `json:"description,omitempty"`

	// DisplayOrder 表示順
	DisplayOrder *int `json:"display_order,omitempty"`

	// Name カテゴリ名
	Name string `json:"name"`

	// Slug URL用の識別子
	Slug string `json:"slug"`
}

// CategoryList カテゴリ一覧レスポンス
type CategoryList struct {
	// Categories カテゴリのリスト
	Categories []Category `json:"categories"`
}

// CategoryUpdate カテゴリ更新リクエスト
type CategoryUpdate struct {
	// Description カテゴリの説明
	Description *string `json:"description,omitempty"`

	// DisplayOrder 表示順
	DisplayOrder *int `json:"display_order,omitempty"`

	// Name カテゴリ名
	Name *string `json:"name,omitempty"`

	// Slug URL用の識別子
	Slug *string `json:"slug,omitempty"`
}

// HealthCheck HealthCheckのレスポンス
type HealthCheck struct {
	// Message メッセージ。通常はok
	Message string `json:"message"`
}

// InternalServerError サーバー内部エラーが発生した場合のエラーレスポンス
type InternalServerError struct {
	// Code エラーコード
	Code string `json:"code"`

	// Message エラーメッセージ
	Message string `json:"message"`

	// RequestId リクエストID（トレーシング用）
	RequestId *string `json:"request_id,omitempty"`
}

// NotFound リソースが見つからない場合のエラーレスポンス
type NotFound struct {
	// Code エラーコード
	Code string `json:"code"`

	// Message エラーメッセージ
	Message string `json:"message"`

	// Resource 見つからなかったリソースの種類
	Resource *string `json:"resource,omitempty"`
}

// Tag 記事タグのデータモデル
type Tag struct {
	// CreatedAt 作成日時
	CreatedAt *time.Time `json:"created_at,omitempty"`

	// Id タグの一意識別子
	Id openapi_types.UUID `json:"id"`

	// Name タグ名
	Name string `json:"name"`

	// Slug URL用の識別子
	Slug string `json:"slug"`

	// UpdatedAt 更新日時
	UpdatedAt *time.Time `json:"updated_at,omitempty"`

	// UsageCount タグが使用されている記事数
	UsageCount *int `json:"usage_count,omitempty"`
}

// TagCreate タグ作成リクエスト
type TagCreate struct {
	// Name タグ名
	Name string `json:"name"`

	// Slug URL用の識別子
	Slug string `json:"slug"`
}

// TagList タグ一覧レスポンス
type TagList struct {
	// Tags タグのリスト
	Tags []Tag `json:"tags"`
}

// TagUpdate タグ更新リクエスト
type TagUpdate struct {
	// Name タグ名
	Name *string `json:"name,omitempty"`

	// Slug URL用の識別子
	Slug *string `json:"slug,omitempty"`
}

// Unauthorized 認証が必要な場合のエラーレスポンス
type Unauthorized struct {
	// Code エラーコード
	Code string `json:"code"`

	// Message エラーメッセージ
	Message string `json:"message"`
}

// CategoryParam defines model for CategoryParam.
type CategoryParam = string

// IdParam defines model for IdParam.
type IdParam = openapi_types.UUID

// MonthParam defines model for MonthParam.
type MonthParam = int

// OrderParam defines model for OrderParam.
type OrderParam string

// PageParam defines model for PageParam.
type PageParam = int

// PageSizeParam defines model for PageSizeParam.
type PageSizeParam = int

// SearchParam defines model for SearchParam.
type SearchParam = string

// SlugParam defines model for SlugParam.
type SlugParam = string

// SortParam defines model for SortParam.
type SortParam string

// StatusParam defines model for StatusParam.
type StatusParam string

// TagParam defines model for TagParam.
type TagParam = string

// YearParam defines model for YearParam.
type YearParam = int

// GetArticlesParams defines parameters for GetArticles.
type GetArticlesParams struct {
	// Page ページ番号
	Page *PageParam `form:"page,omitempty" json:"page,omitempty"`

	// PageSize 1ページあたりの取得件数
	PageSize *PageSizeParam `form:"page_size,omitempty" json:"page_size,omitempty"`

	// Sort ソート項目
	Sort *GetArticlesParamsSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Order ソート順
	Order *GetArticlesParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Status 記事の公開状態でフィルタリング
	Status *GetArticlesParamsStatus `form:"status,omitempty" json:"status,omitempty"`

	// Category カテゴリスラッグでフィルタリング
	Category *CategoryParam `form:"category,omitempty" json:"category,omitempty"`

	// Tag タグスラッグでフィルタリング
	Tag *TagParam `form:"tag,omitempty" json:"tag,omitempty"`

	// Q 検索キーワード
	Q *SearchParam `form:"q,omitempty" json:"q,omitempty"`
}

// GetArticlesParamsSort defines parameters for GetArticles.
type GetArticlesParamsSort string

// GetArticlesParamsOrder defines parameters for GetArticles.
type GetArticlesParamsOrder string

// GetArticlesParamsStatus defines parameters for GetArticles.
type GetArticlesParamsStatus string

// GetArticlesByMonthParams defines parameters for GetArticlesByMonth.
type GetArticlesByMonthParams struct {
	// Page ページ番号
	Page *PageParam `form:"page,omitempty" json:"page,omitempty"`

	// PageSize 1ページあたりの取得件数
	PageSize *PageSizeParam `form:"page_size,omitempty" json:"page_size,omitempty"`
}

// GetPopularArticlesParams defines parameters for GetPopularArticles.
type GetPopularArticlesParams struct {
	// Page ページ番号
	Page *PageParam `form:"page,omitempty" json:"page,omitempty"`

	// PageSize 1ページあたりの取得件数
	PageSize *PageSizeParam `form:"page_size,omitempty" json:"page_size,omitempty"`
}

// GetRecentArticlesParams defines parameters for GetRecentArticles.
type GetRecentArticlesParams struct {
	// Page ページ番号
	Page *PageParam `form:"page,omitempty" json:"page,omitempty"`

	// PageSize 1ページあたりの取得件数
	PageSize *PageSizeParam `form:"page_size,omitempty" json:"page_size,omitempty"`
}

// GetArticlesByCategorySlugParams defines parameters for GetArticlesByCategorySlug.
type GetArticlesByCategorySlugParams struct {
	// Page ページ番号
	Page *PageParam `form:"page,omitempty" json:"page,omitempty"`

	// PageSize 1ページあたりの取得件数
	PageSize *PageSizeParam `form:"page_size,omitempty" json:"page_size,omitempty"`

	// Sort ソート項目
	Sort *GetArticlesByCategorySlugParamsSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Order ソート順
	Order *GetArticlesByCategorySlugParamsOrder `form:"order,omitempty" json:"order,omitempty"`
}

// GetArticlesByCategorySlugParamsSort defines parameters for GetArticlesByCategorySlug.
type GetArticlesByCategorySlugParamsSort string

// GetArticlesByCategorySlugParamsOrder defines parameters for GetArticlesByCategorySlug.
type GetArticlesByCategorySlugParamsOrder string

// SearchArticlesParams defines parameters for SearchArticles.
type SearchArticlesParams struct {
	// Q 検索キーワード
	Q *SearchParam `form:"q,omitempty" json:"q,omitempty"`

	// Page ページ番号
	Page *PageParam `form:"page,omitempty" json:"page,omitempty"`

	// PageSize 1ページあたりの取得件数
	PageSize *PageSizeParam `form:"page_size,omitempty" json:"page_size,omitempty"`

	// Sort ソート項目
	Sort *SearchArticlesParamsSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Order ソート順
	Order *SearchArticlesParamsOrder `form:"order,omitempty" json:"order,omitempty"`

	// Status 記事の公開状態でフィルタリング
	Status *SearchArticlesParamsStatus `form:"status,omitempty" json:"status,omitempty"`

	// Category カテゴリスラッグでフィルタリング
	Category *CategoryParam `form:"category,omitempty" json:"category,omitempty"`

	// Tag タグスラッグでフィルタリング
	Tag *TagParam `form:"tag,omitempty" json:"tag,omitempty"`
}

// SearchArticlesParamsSort defines parameters for SearchArticles.
type SearchArticlesParamsSort string

// SearchArticlesParamsOrder defines parameters for SearchArticles.
type SearchArticlesParamsOrder string

// SearchArticlesParamsStatus defines parameters for SearchArticles.
type SearchArticlesParamsStatus string

// GetArticlesByTagSlugParams defines parameters for GetArticlesByTagSlug.
type GetArticlesByTagSlugParams struct {
	// Page ページ番号
	Page *PageParam `form:"page,omitempty" json:"page,omitempty"`

	// PageSize 1ページあたりの取得件数
	PageSize *PageSizeParam `form:"page_size,omitempty" json:"page_size,omitempty"`

	// Sort ソート項目
	Sort *GetArticlesByTagSlugParamsSort `form:"sort,omitempty" json:"sort,omitempty"`

	// Order ソート順
	Order *GetArticlesByTagSlugParamsOrder `form:"order,omitempty" json:"order,omitempty"`
}

// GetArticlesByTagSlugParamsSort defines parameters for GetArticlesByTagSlug.
type GetArticlesByTagSlugParamsSort string

// GetArticlesByTagSlugParamsOrder defines parameters for GetArticlesByTagSlug.
type GetArticlesByTagSlugParamsOrder string

// CreateArticleJSONRequestBody defines body for CreateArticle for application/json ContentType.
type CreateArticleJSONRequestBody = ArticleCreate

// UpdateArticleByIdJSONRequestBody defines body for UpdateArticleById for application/json ContentType.
type UpdateArticleByIdJSONRequestBody = ArticleUpdate

// CreateCategoryJSONRequestBody defines body for CreateCategory for application/json ContentType.
type CreateCategoryJSONRequestBody = CategoryCreate

// UpdateCategoryByIdJSONRequestBody defines body for UpdateCategoryById for application/json ContentType.
type UpdateCategoryByIdJSONRequestBody = CategoryUpdate

// CreateTagJSONRequestBody defines body for CreateTag for application/json ContentType.
type CreateTagJSONRequestBody = TagCreate

// UpdateTagByIdJSONRequestBody defines body for UpdateTagById for application/json ContentType.
type UpdateTagByIdJSONRequestBody = TagUpdate
